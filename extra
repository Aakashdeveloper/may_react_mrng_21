https://github.com/Aakashdeveloper
https://nodejs.org/en/
https://nodejs.org/en/

Basic JavaScript
Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-2
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
Github
/////////////////////////////
React-GraphQL-1
React_hooks -1
Basic React Native=1

React-Redux =1
React-Redux =1
Testing Jest Enzime
React-Saga -1
React-with-typescript-1
--------NOT Backend--------------
API
GraphQL
Login/Logout

React is a frontend lib/framework that help to build 
single page application using component base structure

open source

npm > node package manager

///////////////////
JSON > JavaScript Object Notation
[
    {
        name:"Keev",
        class:"UI"
    },
    {
        name:"Rahul",
        class:"Node"
    }
]

/////////////////
package.json

> Entry Point to application
> Meta Data(name,description,version)
> packages
> script(start,test,build)

///////////////
How to generate package.json
//////////////////
**NodeJs must be install
> go inside the folder using cmd 
> type npm init 
> answer all questions
> type "yes"

///////////////
Step to install packages
//////////////////
**NodeJs must be install
> go inside the folder using cmd 
> npm i packagename

npm uninstall packagename


///////////////
Step to generate React app
////////////////// 
#window
///One Time Step////
> open cmd as admin
> npm i -g create-react-app 

///Next Every Time You want to generate app ////
> open cmd 
> go inside folder where you want app 
> create-react-app  appname

#mac/linux
///One Time Step////
> open terminal
> sudo npm i -g create-react-app 

///Next Every Time You want to generate app ////
> open cmd 
> go inside folder where you want app 
> create-react-app  appname

///////////////
Step to run React app
////////////////// 
> open cmd
> go inside your app 
> npm start 
> http://localhost:3000/

> npx create-react-app


"react": this is main lib 
"react-dom":  this help to display content 
"react-scripts": this help to run the app


function add(a,b){
    return a,b
}

add(1,2)

parent > child   >>>> we use props to pass data 
child > parent   >>>> we use props with function

//////////////
class component
    > Logical Component
    > use to call api, manage logic and display 
    > it can maintain state

functional component
    > Dumb component
    > we use for display purpose
    > it cannot maintain state


Hooks

///////////////////////
state
    > local variable
    > any data interaction will happen through state
    > mutable( we can change the value in state)

props
    > use to transport state/data
    > immutable(we cannot change the date of props )
    > it can only transfer data btw the nested component


map
filter
indexof 

var a = [32,3,4,353,646]
a.map((data) => {console.log(data)})


function add(a,b){
    return a+b
}


add(1,2)

var a = [4,23,62,15,10,21]

a.filter((data) => {return data>20})


var a = [4,23,62,15,10,21]

a.indexOf(4)
0
a.indexOf(15)
3
a.indexOf(16)
-1
a.indexOf(18)
-1

var a = [0,2,4,6]
a.filter((data) => return data*2)
[0,4,8,12]
[2,4,6]

npm i react-router-dom

Params (/1) (compulsory)
QueryParams (?name=keev) (optional)

Default Props (under routing)
match > for params
history > for redirection
location > for query params

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook


//////
step to create dummy api 
//////////
npm i -g json-server 

json-server --watch user.json --port 8900



/////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}


https://github.com/Aakashdeveloper/march-react-mrng/tree/master/thirdapp


https://www.youtube.com/c/DeveloperFunnel/videos


/////build////
> npm run build

docker build . -t appname
docker run -p 3000:8900 appname